# Generated by Django 4.0.1 on 2022-03-22 01:19

from django.db import migrations, models
import django.db.models.deletion
import posts.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('author_manager', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('type', models.CharField(default='comment', max_length=50)),
                ('comment', models.CharField(max_length=300, null=True)),
                ('contentType', models.CharField(choices=[('text/markdown', 'Markdown'), ('text/plain', 'Plain')], default='text/plain', max_length=50)),
                ('published', models.DateTimeField(auto_now_add=True)),
                ('id', models.CharField(default=posts.models.Comment.short_uuid, editable=False, max_length=8, primary_key=True, serialize=False, unique=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='post_comments', to='author_manager.author')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('type', models.CharField(default='post', max_length=50)),
                ('title', models.CharField(max_length=200)),
                ('id', models.CharField(default=posts.models.Post.short_uuid, editable=False, max_length=8, primary_key=True, serialize=False, unique=True)),
                ('source', models.CharField(blank=True, max_length=300)),
                ('origin', models.CharField(blank=True, max_length=300)),
                ('description', models.CharField(blank=True, default='No description', max_length=300, null=True)),
                ('content_type', models.CharField(choices=[('text/markdown', 'Markdown'), ('text/plain', 'Plain'), ('application/base64', 'Application'), ('image/png;base64', 'Png'), ('image/jpeg;base64', 'Jpeg')], default='text/plain', max_length=50)),
                ('content', models.TextField(blank=True, default='')),
                ('image', models.ImageField(blank=True, null=True, upload_to=posts.models.Post.image_upload_path)),
                ('published', models.DateTimeField(auto_now_add=True)),
                ('visibility', models.CharField(choices=[('public', 'Public'), ('private', 'Private'), ('friends', 'Friends')], default='public', max_length=30)),
                ('visibleTo', models.CharField(blank=True, max_length=200)),
                ('unlisted', models.BooleanField(default=False)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='author_manager.author')),
                ('categories', models.ManyToManyField(blank=True, to='posts.Category')),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary', models.CharField(max_length=300)),
                ('type', models.CharField(default='Like', max_length=50)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='author_manager.author')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='posts.comment')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='posts.post')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commentsSrc', to='posts.post'),
        ),
    ]
